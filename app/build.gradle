/*
 *  JoozdLog Pilot's Logbook
 *  Copyright (c) 2020 Joost Welle
 *
 *      This program is free software: you can redistribute it and/or modify
 *      it under the terms of the GNU Affero General Public License as
 *      published by the Free Software Foundation, either version 3 of the
 *      License, or (at your option) any later version.
 *
 *      This program is distributed in the hope that it will be useful,
 *      but WITHOUT ANY WARRANTY; without even the implied warranty of
 *      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *      GNU Affero General Public License for more details.
 *
 *      You should have received a copy of the GNU Affero General Public License
 *      along with this program.  If not, see https://www.gnu.org/licenses
 *
 */

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        applicationId "nl.joozd.logbookapp"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 5
        versionName "0.1.20200919.1 alpha"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.incremental"   : "true",
                             "room.schemaLocation": "$projectDir/schemas".toString()]

            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    /*
    viewBinding {
        enabled = true
    }
     */

    buildFeatures {
        viewBinding = true
    }


    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true

        // Sets Java compatibility to Java 8
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }


}

androidExtensions {
    experimental = true
}


dependencies {
    def room_version = "2.2.5"
    def work_version = "2.4.0"

    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.0.10'

    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    //androidX
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.core:core-ktx:1.3.1'

    //constraintlayout 2.0 makes my app skip up to 150 frames when opening editFlightFragment
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.annotation:annotation:1.1.0'

    //carefull with this one, 1.3.0-alpha02 makes recyclerview really slow
    // might be because it is depending on alpha/beta commits of constraintlayout and recyclerview
    implementation 'com.google.android.material:material:1.2.1'

    //kotlin Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.4"

    //Kotlin Extensions
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"
    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation "androidx.fragment:fragment-ktx:1.2.5"
    implementation "androidx.room:room-ktx:$room_version"
    implementation "androidx.work:work-runtime-ktx:$work_version"

    kapt "androidx.room:room-compiler:$room_version"
    // For Kotlin use kapt instead of annotationProcessor

    //RecyclerView Fasstscroller
    implementation 'com.quiph.ui:recyclerviewfastscroller:0.1.3'

    //SVG library for signatures
    implementation 'com.caverock:androidsvg-aar:1.4'
    implementation 'com.github.gcacace:signature-pad:1.3.1'

    //GraphView
    implementation 'com.jjoe64:graphview:4.2.2'

    // iText PDF
    implementation "com.itextpdf:itextg:5.5.10"


    // Lifecycle components
    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-common-java8:2.2.0"

    //Background  worker thingy
    implementation "androidx.work:work-runtime:$work_version"

    // optional - GCMNetworkManager support
    // implementation "androidx.work:work-gcm:$work_version"
    //Own classes
    implementation project(":joozdlogCommon")
    implementation project(":klcrosterparser")
    implementation project(":JoozdlogPdfDetector")


    //test libraries
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
